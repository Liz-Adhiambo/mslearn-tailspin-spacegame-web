trigger:
- '*'  # Runs on any branch change

pool:
  name: 'Default'  # Replace with your agent pool name if different

variables:
  buildConfiguration: 'Release'
  dotnetSdkVersion: '6.x'

steps:
# Install .NET SDK 6.x
- task: UseDotNet@2
  displayName: 'Use .NET SDK $(dotnetSdkVersion)'
  inputs:
    packageType: sdk
    version: '$(dotnetSdkVersion)'

# Install Node.js dependencies (including Gulp)
- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    command: 'install'

# Ensure Gulp is accessible by adding `node_modules/.bin` to PATH
- script: 'export PATH=$(pwd)/node_modules/.bin:$PATH'
  displayName: 'Add local npm bin to PATH'

# Compile Sass assets
- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

# Run Gulp tasks using npx (ensures it works even if not globally installed)
- script: 'npx gulp'
  displayName: 'Run gulp tasks'

# Write build info for tracking
- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

# Restore NuGet project dependencies
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

# Build the .NET project in Release mode
- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Publish the project - Release'
  inputs:
    command: 'publish'
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/Release'
    zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeeded()
